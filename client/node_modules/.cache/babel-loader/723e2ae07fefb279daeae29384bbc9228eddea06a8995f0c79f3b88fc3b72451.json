{"ast":null,"code":"var _jsxFileName = \"/Users/nathanschrader/Downloads/blog-boilerplate/client/src/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentCreate from './CommentCreate';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState({});\n  async function fetchPosts() {\n    const res = await axios.get('http://localhost:4002/posts');\n    console.log(res.data);\n    setPosts(res.data);\n  }\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const renderedPosts = Object.values(posts).map(post => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: '30%',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentCreate, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row flex-wrap justify-content-between\",\n      children: renderedPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(PostList, \"x9bp4+EUybyoJxklz6lKZgAYJjU=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","CommentCreate","CommentList","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","posts","setPosts","fetchPosts","res","get","console","log","data","renderedPosts","Object","values","map","post","className","style","width","marginBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postId","id","_c","$RefreshReg$"],"sources":["/Users/nathanschrader/Downloads/blog-boilerplate/client/src/PostList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport CommentCreate from './CommentCreate'\nimport CommentList from './CommentList'\n\nconst PostList = () => {\n  const [posts, setPosts] = useState({})\n\n  async function fetchPosts() {\n    const res = await axios.get('http://localhost:4002/posts')\n    console.log(res.data)\n    setPosts(res.data)\n  }\n\n  useEffect(() => {\n    fetchPosts()\n  }, [])\n\n  const renderedPosts = Object.values(posts).map(post => {\n    return (\n      <div className=\"card\" style={{width: '30%', marginBottom: '20px'}} key={post.id}>\n        <div className=\"card-body\">\n          <h3>{post.title}</h3>\n          <CommentList postId={post.id} />\n          <CommentCreate postId={post.id} />\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <>\n      <div className=\"d-flex flex-row flex-wrap justify-content-between\">\n        {renderedPosts}\n      </div>\n    </>\n  )\n}\n\nexport default PostList"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,eAAea,UAAUA,CAAA,EAAG;IAC1B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC;IAC1DC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrBN,QAAQ,CAACE,GAAG,CAACI,IAAI,CAAC;EACpB;EAEAjB,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACV,KAAK,CAAC,CAACW,GAAG,CAACC,IAAI,IAAI;IACrD,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAACC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAC,QAAA,eAChEtB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAI,QAAA,gBACxBtB,OAAA;UAAAsB,QAAA,EAAKL,IAAI,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrB3B,OAAA,CAACF,WAAW;UAAC8B,MAAM,EAAEX,IAAI,CAACY;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChC3B,OAAA,CAACH,aAAa;UAAC+B,MAAM,EAAEX,IAAI,CAACY;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC,GALgEV,IAAI,CAACY,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM1E,CAAC;EAEV,CAAC,CAAC;EAEF,oBACE3B,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA;MAAKkB,SAAS,EAAC,mDAAmD;MAAAI,QAAA,EAC/DT;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAvB,EAAA,CAhCKD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAkCd,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}